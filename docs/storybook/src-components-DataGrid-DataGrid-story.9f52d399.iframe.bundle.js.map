{"version":3,"file":"src-components-DataGrid-DataGrid-story.9f52d399.iframe.bundle.js","mappings":";;;;;AAsBA;;AA2EA;AC7DA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA","sources":["webpack://anique/./src/lib/src/components/DataGrid/components/Navigation.tsx","webpack://anique/./src/lib/src/components/Heading/Heading.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport React, { FC, MouseEvent, ReactElement, ReactNode } from 'react';\r\nimport { Link } from '../../Link';\r\ninterface NavItemProps {\r\n  name: string;\r\n  responsive?: boolean;\r\n  unlink?: boolean;\r\n  icon?: ReactElement;\r\n  index?: number;\r\n  nested?: ReactElement;\r\n  to?: string;\r\n  className?: string;\r\n  onClick?: (event: MouseEvent<HTMLLIElement>) => void;\r\n}\r\n\r\nconst StyledNavItem = styled.li`\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n`;\r\n\r\nexport const NavItem: FC<NavItemProps> = ({\r\n  name,\r\n  responsive,\r\n  unlink,\r\n  icon,\r\n  index,\r\n  nested,\r\n  to,\r\n  className,\r\n  onClick\r\n}): ReactElement => {\r\n  let listItem: string | ReactElement = name;\r\n  if (responsive === true) {\r\n    listItem =\r\n      name === 'Login' ? (\r\n        <i className=\"fas fa-user-circle fa-2x\"></i>\r\n      ) : name === 'Search' ? (\r\n        <i className=\"fas fa-search fa-lg\"></i>\r\n      ) : (\r\n        listItem\r\n      );\r\n  }\r\n  return (\r\n    <>\r\n      {/* <li title={name} className={`nav-item mx-10 px-10 ${className ? className : \"\"}`} onClick={onClick} >\r\n            {unlink ? (icon ? icon : listItem) :\r\n                <Link to={to ? to : `/${name.replace(/[^a-zA-Z ]/g, \"\").replace(/\\s+/g, \"-\").toLowerCase()}`}>\r\n                    {icon ? icon : listItem}\r\n                </Link>\r\n            }\r\n        </li> */}\r\n      {unlink ? (\r\n        <StyledNavItem\r\n          title={name}\r\n          data-index={index}\r\n          className={`nav-item ${className || ''}`}\r\n          onClick={onClick}\r\n        >\r\n          {icon ? icon : listItem}\r\n          {nested}\r\n        </StyledNavItem>\r\n      ) : (\r\n        <Link\r\n          url={\r\n            to\r\n              ? to\r\n              : `/${name\r\n                  .replace(/[^a-zA-Z ]/g, '')\r\n                  .replace(/\\s+/g, '-')\r\n                  .toLowerCase()}`\r\n          }\r\n        >\r\n          <StyledNavItem\r\n            title={name}\r\n            data-index={index}\r\n            className={`nav-item ${className || ''}`}\r\n            onClick={onClick}\r\n          >\r\n            {icon ? icon : listItem}\r\n          </StyledNavItem>\r\n        </Link>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface NavMenuProps {\r\n  NavItems: ReactNode;\r\n  className?: string;\r\n}\r\n\r\nconst StyledNavMenu = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nexport const NavMenu: FC<NavMenuProps> = ({\r\n  className,\r\n  NavItems\r\n}): ReactElement => {\r\n  return (\r\n    <nav className=\"menu\">\r\n      <StyledNavMenu className={`flex nav-items ${className || ''}`}>\r\n        {NavItems}\r\n      </StyledNavMenu>\r\n    </nav>\r\n  );\r\n};\r\n","import React, {ReactElement, ReactNode} from 'react';\r\nimport styled from '@emotion/styled';\r\nimport {generateUniqueID} from '../../utilities';\r\n\r\ntype HeadingTagName = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\r\n\r\nexport interface HeadingProps {\r\n    /**\r\n     * The element name to use for the heading\r\n     * @default 'h2'\r\n     */\r\n    element?: HeadingTagName;\r\n    /** The content to display inside the heading */\r\n    children?: ReactNode;\r\n    /** A unique identifier for the heading, used for reference in anchor links  */\r\n    id?: string;\r\n    /** Heading className attribute */\r\n    className?: string;\r\n}\r\n\r\nconst UnstyledHeading = ({\r\n                             element: Element = 'h2',\r\n                             children,\r\n                             className,\r\n                             id\r\n                         }: HeadingProps): ReactElement => {\r\n    const _id = id || generateUniqueID('Ursa-Heading');\r\n\r\n    return (\r\n        <Element id={_id} className={`Ursa-Heading ${className || ''}`}>\r\n            {children}\r\n        </Element>\r\n    );\r\n};\r\n\r\nexport const H1 = styled.h1`\r\n  color: ${props => props.theme.color.textPrimary}\r\n`\r\nexport const H2 = styled.h2`\r\n  color: ${props => props.theme.color.textPrimary}\r\n`\r\nexport const H3 = styled.h3`\r\n  color: ${props => props.theme.color.textPrimary}\r\n`\r\nexport const H4 = styled.h4`\r\n  color: ${props => props.theme.color.textPrimary}\r\n`\r\nexport const H5 = styled.h5`\r\n  color: ${props => props.theme.color.textPrimary}\r\n`\r\nexport const H6 = styled.h6`\r\n  color: ${props => props.theme.color.textPrimary}\r\n`"],"names":[],"sourceRoot":""}