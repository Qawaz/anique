{"version":3,"file":"392.0d06eedf.iframe.bundle.js","mappings":";;;;;;;;;;;;;AAuBA;;;;;;;;;;ACSA","sources":["webpack://anique/./src/lib/src/components/Invisible/Invisible.tsx","webpack://anique/./src/lib/src/components/Spinner/Spinner.tsx"],"sourcesContent":["import React, { ReactElement, ReactNode } from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nexport interface InvisibleProps {\r\n  /** The content to be hidden visually */\r\n  children?: ReactNode;\r\n}\r\n\r\nconst StyledInvisible = styled.span`\r\n  visibility: hidden !important;\r\n  position: absolute !important;\r\n  top: 0 !important;\r\n  width: 1px !important;\r\n  height: 1px !important;\r\n  margin: 0 !important;\r\n  padding: 0 !important;\r\n  overflow: hidden !important;\r\n  border: 0 !important;\r\n  outline: 0 !important;\r\n  white-space: nowrap !important;\r\n  clip-path: inset(50%) !important;\r\n`;\r\n\r\nexport const Invisible = ({ children }: InvisibleProps): ReactElement => {\r\n  return (\r\n    <StyledInvisible className=\"Ursa-Invisible\">{children}</StyledInvisible>\r\n  );\r\n};\r\n","import React, { FC, ReactElement } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { useTestId } from '../../utilities';\r\n\r\ntype Size = 'small' | 'large';\r\n\r\nexport interface SpinnerProps {\r\n  /**\r\n   * Size of spinner\r\n   * @default 'large'\r\n   */\r\n  size?: Size;\r\n  /** Fill color of the spinner */\r\n  color?: string;\r\n  /** Accessible label for the spinner */\r\n  accessibilityLabel?: string;\r\n  /** Allows the component to apply the correct accessibility roles based on focus */\r\n  hasFocusableParent?: boolean;\r\n}\r\n\r\nconst UrsaStyledSpinner = styled.svg`\r\n  animation: spin 1s linear infinite;\r\n  @keyframes spin {\r\n    from {\r\n      transform: rotate(0deg);\r\n    }\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Spinner: FC<SpinnerProps> = ({\r\n  size = 'large',\r\n  color = 'currentColor'\r\n}): ReactElement => {\r\n  const testid = useTestId('spinner');\r\n  const spinnerSVGMarkup = (\r\n    <UrsaStyledSpinner\r\n      viewBox=\"0 0 20 20\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      data-icon=\"spinner\"\r\n      {...testid}\r\n      width={size === 'small' ? '16' : '32'}\r\n      height={size === 'small' ? '16' : '32'}\r\n      fill={color}\r\n    >\r\n      <path d=\"M7.229 1.173a9.25 9.25 0 1011.655 11.412 1.25 1.25 0 10-2.4-.698 6.75 6.75 0 11-8.506-8.329 1.25 1.25 0 10-.75-2.385z\" />\r\n    </UrsaStyledSpinner>\r\n  );\r\n\r\n  return <span className=\"Ursa-Spinner\">{spinnerSVGMarkup}</span>;\r\n};\r\n"],"names":[],"sourceRoot":""}